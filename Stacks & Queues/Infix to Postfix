#include<bits/stdc++.h>
using namespace std;

int getPriority(char s){
    if(s == '^')
        return 10;
    else if( s == '/')
        return 5;
    else if( s == '*')
        return 4;
    else if( s == '+' or s == '-')
        return 3;
    else
        return 0;
}



string infixToPostfix(string infix){
    int n= infix.length();
    string res = "";
    if(n==0)
        return res;
    stack<char> s;
    for(int i=0; i<n; i++){
        char c = infix[i]; 
        if((c >= 'a' and c <= 'z') or (c >= 'A' and c <= 'Z') or (c >= '0' and c <= '9'))
            res.push_back(c);
        else if(c =='(')
            s.push(c);
        else if(c == ')'){
            while(!s.empty() and s.top() != '('){
                res.push_back(s.top());
                s.pop();
            }
            s.pop();
        }
        else{
            while(!s.empty() and getPriority(c) <= getPriority(s.top())){
                res.push_back(s.top());
                s.pop();
            }
            s.push(c);
        }
    }
    while(!s.empty()){
        res.push_back(s.top());
        s.pop();
    }
    return res;
}



int main(){
    string exp = "a+b*(c^d-e)^(f+g*h)-i";
    string ans = infixToPostfix(exp);
    cout<<ans;
    return 0;
}

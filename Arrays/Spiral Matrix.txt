vector<int> spiralOrder(vector<vector<int>>& matrix) {
    
        vector<int> ans;
        if(matrix.size() == 0)
            return ans;
        int top=0;
        int bottom=matrix.size()-1;    // no of rows so, row_size()-1
        int right=matrix[0].size()-1;
        int left=0;
        
        while(top <= bottom or left <= right){
            if(bottom>=top)
            for(int i = left; i <= right; i++){
                ans.push_back(matrix[top][i]);
            }
            top++;
            
            if(right>=left)
            for(int i= top; i <= bottom; i++){
                ans.push_back(matrix[i][right]);
            }
            right--;
            
            if(bottom>=top){
                for(int i=right; i>=left; i--){                
                    ans.push_back(matrix[bottom][i]);
                }
            }
            bottom--;
            
            if(right>=left){
                for(int i=bottom; i>=top;i--){                
                    ans.push_back(matrix[i][left]);
                }
            }
            left++; 
        }
        
        return ans;        
    }